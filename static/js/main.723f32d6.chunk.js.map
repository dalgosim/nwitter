{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["dotenv","config","firebaseConfig","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","REACT_APP_SENDER_ID","appId","_createUserWithEmailAndPassword","email","password","createUserWithEmailAndPassword","authService","then","userCredential","user","console","log","catch","error","code","message","_signInWithEmailAndPassword","signInWithEmailAndPassword","_signInWithPopup","provider","signInWithPopup","result","GithubAuthProvider","credentialFromResult","accessToken","credentialFromError","_updateProfile","profile","a","updateProfile","currentUser","writeDB","collectionName","data","addDoc","collection","dbService","firebaseGoogleProvider","initializeApp","GoogleAuthProvider","firebaseGithubProvider","getAuth","getFirestore","storageService","getStorage","AuthForm","useState","setEmail","setPassword","setError","newAccount","setNewAccount","onChange","event","target","name","value","onSubmit","preventDefault","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","deleteDoc","doc","id","attachmentUrl","deleteObject","ref","toggleEditing","updateDoc","autoFocus","src","width","height","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","uid","uuidv4","uploadString","snapshot","response","getDownloadURL","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","nweetRef","q","query","orderBy","onSnapshot","newArray","docs","map","document","marginTop","Profile","refreshUser","navigate","useNavigate","displayName","newDisplayName","setNewDisplayName","signOut","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","margin","exact","path","element","App","init","setInit","setUserObj","onAuthStateChanged","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.723f32d6.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport { getAuth, updateProfile, signInWithPopup, createUserWithEmailAndPassword, signInWithEmailAndPassword, GoogleAuthProvider, GithubAuthProvider } from \"firebase/auth\";\nimport { getFirestore, collection, addDoc, getDocs } from \"firebase/firestore\";\nimport { getStorage } from \"firebase/storage\";\nimport dotenv from \"dotenv\";\ndotenv.config();\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\nexport const _createUserWithEmailAndPassword = (email, password) => {\n    createUserWithEmailAndPassword(authService, email, password)\n        .then((userCredential) => {\n            // Signed in\n            const user = userCredential.user;\n            console.log(\"user : \", userCredential);\n        })\n        .catch((error) => {\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            console.log(\"error : \", error);\n            // ..\n        });\n}\n\nexport const _signInWithEmailAndPassword = (email, password) => {\n    signInWithEmailAndPassword(authService, email, password)\n        .then((userCredential) => {\n            // Signed in\n            const user = userCredential.user;\n            console.log(\"user : \", userCredential);\n        })\n        .catch((error) => {\n            const errorCode = error.code;\n            const errorMessage = error.message;\n            console.log(\"error : \", error);\n        });\n}\n\nexport const _signInWithPopup = (provider) => {\n    signInWithPopup(authService, provider)\n    .then((result) => {\n        // This gives you a GitHub Access Token. You can use it to access the GitHub API.\n        const credential = GithubAuthProvider.credentialFromResult(result);\n        const token = credential.accessToken;\n\n        // The signed-in user info.\n        const user = result.user;\n        // ...\n    }).catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // The email of the user's account used.\n        const email = error.email;\n        // The AuthCredential type that was used.\n        const credential = GithubAuthProvider.credentialFromError(error);\n        // ...\n    });\n}\n\nexport const _updateProfile = async (profile) => {\n    await updateProfile(authService.currentUser, profile).then(() => {\n        // Profile updated!\n        // ...\n    }).catch((error) => {\n        // An error occurred\n        // ...\n    });\n}\n\nexport const writeDB = async (collectionName, data) => {\n    try {\n        const docRef = await addDoc(collection(dbService, collectionName), data);\n    } catch (e) {\n        console.error(\"Error adding document: \", e);\n    }\n}\n\nexport const readDB = async (collectionName) => {\n    try {\n        const querySnapshot = await getDocs(collection(dbService, collectionName));\n        return querySnapshot;\n    } catch (e) {\n        console.error(\"Error reading  document: \", e);\n    }\n}\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nexport const firebaseGoogleProvider = GoogleAuthProvider;\nexport const firebaseGithubProvider = GithubAuthProvider;\nexport const authService = getAuth();\nexport const dbService = getFirestore();\nexport const storageService = getStorage();","import { authService, firebaseGoogleProvider, firebaseGithubProvider, _signInWithPopup, _createUserWithEmailAndPassword, _signInWithEmailAndPassword } from \"fbase\";\nimport { useState } from \"react\";\n\n\nconst AuthForm = () => {\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n    const [newAccount, setNewAccount] = useState(true);\n\n    const onChange = (event) => {\n        // console.log(event.target.name);\n        const {\n            target: {name, value},\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            let data;\n            if (newAccount) {\n                // create newAccount\n                data = await _createUserWithEmailAndPassword(email, password);\n            } else {\n                // login\n                data = await _signInWithEmailAndPassword(email, password);\n            }\n        } catch (error) {\n            setError(error.message);\n        }\n    }\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input name=\"email\" type=\"email\" placeholder=\"Email\" required value={email} onChange={onChange} className=\"authInput\"/>\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" required value={password} onChange={onChange} className=\"authInput\" />\n                <input type=\"submit\" value={newAccount ? \"Create Account\" : \"Log In\"} className=\"authInput authSubmit\" />\n                {error && <span className=\"authSwitch\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    );\n}\n\nexport default AuthForm;","import AuthForm from \"components/AuthForm\";\nimport { authService, firebaseGoogleProvider, firebaseGithubProvider, _signInWithPopup, _createUserWithEmailAndPassword, _signInWithEmailAndPassword } from \"fbase\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { faTwitter, faGoogle, faGithub } from \"@fortawesome/free-brands-svg-icons\"\nimport { useState } from \"react\";\n\nconst Auth = () => {\n\n    const onSocialClick = async (event) => {\n        const {\n            target: {name},\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseGoogleProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseGithubProvider();\n        }\n        const data = await _signInWithPopup(provider);\n    }\n\n    return (\n        <div className=\"authContainer\">\n            <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" style={{ marginBottom: 30 }}/>\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle}/>\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub}/>\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;","import { dbService, storageService, writeDB } from \"fbase\";\nimport { doc, deleteDoc, updateDoc } from \"firebase/firestore\";\nimport { ref, deleteObject } from \"firebase/storage\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({nweetObj, isOwner}) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"삭제하시겠습니까?\");\n\n        if (ok) {\n            await deleteDoc(doc(dbService, \"nweet\", nweetObj.id));\n            if (nweetObj.attachmentUrl!=\"\") {\n                deleteObject(ref(storageService, nweetObj.attachmentUrl)).then(() => {\n                    // File deleted successfully\n                    console.log(\"File deleted successfully\");\n                }).catch((error) => {\n                    // Uh-oh, an error occurred!\n                    console.log(\"Uh-oh, an error occurred!\");\n                });\n            }\n        }\n    }\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewNweet(value);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await updateDoc(doc(dbService, \"nweet\", nweetObj.id), {text: newNweet});\n        setEditing(false);\n    };\n\n    return (\n        <div className=\"nweet\">\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                        <input onChange={onChange} value={newNweet} required placeholder=\"Edit your nweet\" autoFocus className=\"formInput\" />\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n                    </form>\n                    <button onClick={toggleEditing} className=\"formBtn cancelBtn\">Cancel</button>\n                </>\n            ) : (\n                <>\n                <h4>{nweetObj.text}</h4>\n                {nweetObj.attachmentUrl && (\n                    <img src={nweetObj.attachmentUrl} width=\"50px\" height=\"50px\" />\n                )}\n                {isOwner && (\n                    <div className=\"nweet__actions\">\n                        <span onClick={onDeleteClick}>\n                            <FontAwesomeIcon icon={faTrash}/>\n                        </span>\n                        <span onClick={toggleEditing}>\n                            <FontAwesomeIcon icon={faPencilAlt}/>\n                        </span>\n                    </div>\n                )}\n                </>\n            )}\n        </div>\n    );\n}\n\nexport default Nweet;","import { writeDB, readDB, dbService, storageService } from \"fbase\";\nimport { ref, uploadString, getDownloadURL } from \"firebase/storage\";\nimport { v4 as uuidv4 } from 'uuid';\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst NweetFactory = ({userObj}) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (nweet === \"\") {\n            return;\n        }\n        let attachmentUrl = \"\";\n        if (attachment!=\"\") {\n            const attachmentRef = ref(storageService, `${userObj.uid}/${uuidv4()}`);\n            const response = await uploadString(attachmentRef, attachment, 'data_url').then((snapshot) => {\n                console.log('Uploaded a data_url string!');\n                console.log(snapshot);\n                return snapshot;\n            });\n            attachmentUrl = await getDownloadURL(response.ref);\n        }\n        await writeDB(\"nweet\", {\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentUrl,\n        });\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n\n    const onChange = (event) => {\n        event.preventDefault();\n        const {\n            target: { value },\n        } = event;\n        setNweet(value);\n    };\n\n    const onFileChange = (event) => {\n        const {\n            target: {files},\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: {result},\n            } = finishedEvent;\n            setAttachment(result);\n        }\n        if (Boolean(theFile)){\n            reader.readAsDataURL(theFile);\n        }\n    };\n\n    const onClearAttachment = () => {\n        setAttachment(\"\");\n    };\n\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input className=\"factoryInput__input\" value={nweet} onChange={onChange} type=\"text\" placeholder=\"What's on your mind?\" maxLength={120}/>\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\"/>\n            </div>\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input id=\"attach-file\" type=\"file\" accept=\"image/*\" onChange={onFileChange} style={{opacity:0}}/>\n            { attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img src={attachment} style={{backgroundImage: attachment}} /> \n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes}/>\n                    </div>\n                </div>\n            )}\n        </form>\n    );\n};\n\nexport default NweetFactory;","import { dbService } from \"fbase\";\nimport { useEffect, useState } from \"react\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\nimport { getDocs, collection, onSnapshot, query, where, orderBy } from \"firebase/firestore\";\n\n\nconst Home = ({userObj}) => {\n    const [nweets, setNweets] = useState([]);\n\n    // const getNweets = async () => {\n    //     const dbNweets = await readDB(\"nweet\");\n    //     dbNweets.forEach((doc) => {\n    //         const nweetObject = { ...doc.data(), id: doc.id }\n    //         setNweets((prev) => [nweetObject, ...prev]);\n    //     });\n    // };\n\n    useEffect(() => {\n        // getNweets();\n        const nweetRef = collection(dbService, \"nweet\");\n        const q = query(nweetRef,\n            orderBy(\"createdAt\", \"desc\")\n        );\n        const unsub = onSnapshot(q, (snapshot) => {\n            const newArray = snapshot.docs.map((document) => ({\n                id: document.id,\n                ...document.data(),\n            }));\n            setNweets(newArray);\n        });        \n    }, []);\n\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj}/>\n            <div style={{marginTop: 30}}>\n                {nweets.map((nweet) => (\n                    <Nweet key={nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObj.uid} />\n                ))}\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import { authService, dbService, _updateProfile } from \"fbase\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { getDocs, collection, query, where, orderBy } from \"firebase/firestore\";\n\nconst Profile = ({userObj, refreshUser}) => {\n    const navigate = useNavigate();\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n\n    const onLogOutClick = () => {\n        authService.signOut();\n        navigate(\"/\");\n    };\n\n    const onChange = (event) => {\n        const {\n            target: {value},\n        } = event;\n        setNewDisplayName(value);\n    }\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await _updateProfile({displayName: newDisplayName});\n            refreshUser();\n        }\n    }\n\n    // const getMyNeets = async () => {\n    //     const nweetRef = collection(dbService, \"nweet\");\n    //     const q = query(nweetRef,\n    //         where(\"creatorId\", \"==\", userObj.uid),\n    //         orderBy(\"createdAt\", \"asc\")\n    //     );\n    //     const querySnapshot = await getDocs(q);\n\n    //     console.log(querySnapshot.docs.map((doc) => doc.data()));\n    // }\n\n    useEffect(() => {\n        // getMyNeets();\n    }, []);\n    \n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input type=\"text\" placeholder=\"Display name\" onChange={onChange} value={newDisplayName} autoFocus className=\"formInput\" />\n                <input type=\"submit\" placeholder=\"Update Profile\" className=\"formBtn\" style={{marginTop:10}}/>\n            </form>\n            <span className=\"formBtn cancelBtn logOut\" onClick={onLogOutClick}>\n                Log Out\n            </span>\n        </div>\n    );\n};\n\nexport default Profile;","import { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Navigation = ({userObj}) => {\n    return (\n        <nav>\n            <ul style={{ display: \"flex\", justifyContent:\"center\", marginTop:50}}>\n                <li><Link to=\"/\" style={{marginRight: 10}}>\n                    <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n                </Link></li>\n                <li><Link to=\"/profile\" style={{ marginLeft:10, display: \"flex\", flexDirection:\"column\", alignItems:\"center\", fontSize:12 }}>\n                    <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\n                    <span style={{ marginTop: 10 }}>\n                        {userObj.displayName? `${userObj.displayName}의 Profile` : \"Profile\"}\n                    </span>\n                </Link></li>\n            </ul>\n        </nav>\n    );\n}\n\nexport default Navigation;","import { useState } from \"react\";\nimport { HashRouter as Router, Route, Routes } from \"react-router-dom\"; //Switch -> Routes (v6.0.2)\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"components/Navigation\";\n\n\nconst AppRouter = ({isLoggedIn, userObj, refreshUser}) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj}/>}\n            <div style={{\n                        maxWidth: 890,\n                        width: \"100%\",\n                        margin: \"0 auto\",\n                        marginTop: 80,\n                        display: \"flex\",\n                        justifyContent: \"center\"\n                    }}>\n                <Routes>\n                    {isLoggedIn ? (\n                        <>\n                            <Route exact path=\"/\" element={<Home userObj={userObj}/>} />\n                            <Route exact path=\"/profile\" element={<Profile userObj={userObj} refreshUser={refreshUser}/>} />\n                        </>\n                    ) : (\n                        <Route exact path=\"/\" element={<Auth/>} />\n                    )}\n                </Routes>\n            </div>\n        </Router>\n    );\n}\n\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  // const [isLoggedIn, setIsLoggedIn] = useState(authService.currentUser);\n  const [userObj, setUserObj] = useState(null);\n\n  const refreshUser = () => {\n    // setUserObj(authService.currentUser);\n    const user = authService.currentUser;\n    setUserObj({\n      uid: user.uid,\n      displayName: user.displayName\n    });\n  }\n\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        // setIsLoggedIn(user);\n        setUserObj({\n          uid: user.uid,\n          displayName: user.displayName\n        });\n      } else {\n        setUserObj(false);\n      }\n      setInit(true);\n    });\n  }, []);\n\n  return (\n    <>\n      {init ? (<AppRouter refreshUser={refreshUser} isLoggedIn={Boolean(userObj)} userObj={userObj}/>) : (\"initializing..\")}\n      {/* <footer>&copy; {new Date().getFullYear()} Nwitter</footer> */}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\n\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}